name: Deploy to Production

on:
  push:
    branches: [ deployment ]
  pull_request:
    branches: [ deployment ]

env:
  # Production API URL
  REACT_APP_API_URL: http://localhost:8000
  
jobs:
  # Job 1: Replace API URLs in the codebase
  update-api-urls:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Replace API URLs in React components
      run: |
        # Replace localhost URLs with production URLs in all JavaScript files
        find src -name "*.js" -type f -exec sed -i 's|http://localhost:8000|http://localhost:8000|g' {} \;
        
        # Replace localhost URLs in any TypeScript files (if any)
        find src -name "*.ts" -type f -exec sed -i 's|http://localhost:8000|http://localhost:8000|g' {} \;
        find src -name "*.tsx" -type f -exec sed -i 's|http://localhost:8000|http://localhost:8000|g' {} \;
        
        # Show the changes made
        echo "API URLs updated in the following files:"
        git diff --name-only || echo "No changes detected"
        
    - name: Commit API URL changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "Update API URLs for production deployment"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: deployment

  # Job 2: Build and validate the application
  build-and-test:
    runs-on: ubuntu-latest
    needs: update-api-urls
    
    steps:
    - name: Checkout updated code
      uses: actions/checkout@v4
      with:
        ref: deployment
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React application
      run: npm run build
      
    - name: Run tests (if available)
      run: npm test -- --coverage --watchAll=false || echo "No tests found"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: build/

  # Job 3: Deploy to production server (placeholder)
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/deployment'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: build/
        
    - name: Deploy to production
      run: |
        echo "Deploying to production server..."
        echo "Build files are ready in the build/ directory"
        # Add your actual deployment commands here
        # For example:
        # - Copy files to server
        # - Restart services
        # - Run database migrations
        # - Clear caches
        
    - name: Notify deployment success
      run: |
        echo "ðŸŽ‰ Deployment completed successfully!"
        echo "Application is now live at: http://localhost:8000"

  # Job 4: Backup current deployment (optional)
  backup:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deployment'
    
    steps:
    - name: Create deployment backup
      run: |
        echo "Creating backup of current deployment..."
        # Add backup commands here
        echo "Backup created with timestamp: $(date)"
